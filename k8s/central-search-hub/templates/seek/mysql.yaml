apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-seek-solr
spec:
  selector:
    matchLabels:
      name: {{ .Release.Name }}-seek-solr
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-seek-solr
    spec:
      containers:
      - image: fairdom/seek-solr:8.11
        name: solr
        env:
          - name: SOLR_JAVA_MEM
            value: -Xms512m -Xmx1024m
        ports:
          - containerPort: 8983
        volumeMounts:
          - mountPath: /var/solr/
            name: {{ .Release.Name }}-seek-solr-data-container
        command: [ "/bin/sh" ]
        args: [ "-c", "docker-entrypoint.sh solr-precreate seek /opt/solr/server/solr/configsets/seek_config" ]
      securityContext:
        fsGroup: 8983
      volumes:
        - name: {{ .Release.Name }}-seek-solr-data-container
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-seek-solr-data-container
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-seek-solr
spec:
  ports:
    - name: "8983"
      port: 8983
      targetPort: 8983
  selector:
    name: {{ .Release.Name }}-seek-solr
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-seek-solr-data-container
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
{{- $name := printf "%s-%s" .Release.Name "seek-secret" }}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace $name) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-seek-secret
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  {{ if $secret -}}
  MYSQL_ROOT_PASSWORD: {{ $secret.data.MYSQL_ROOT_PASSWORD }}
  MYSQL_USER: {{ $secret.data.MYSQL_USER}}
  MYSQL_PASSWORD: {{ $secret.data.MYSQL_PASSWORD }}
  {{- else }}
  MYSQL_ROOT_PASSWORD: {{ randAlphaNum 20  |b64enc| quote }}
  MYSQL_USER: {{ randAlphaNum 10  |b64enc| quote }}
  MYSQL_PASSWORD: {{ randAlphaNum 20  |b64enc| quote }}
  {{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-seek-mysql
spec:
  serviceName: {{ .Release.Name }}-seek-mysql
  selector:
    matchLabels:
      name: {{ .Release.Name }}-seek-mysql
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-seek-mysql
    spec:
      containers:
      - image: mysql:5.7
        name: mysql
        resources:
          limits:
            memory: 1000Mi
          requests:
            memory: 500Mi
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-seek-secret
                key: MYSQL_ROOT_PASSWORD
                optional: false
          - name: MYSQL_DATABASE
            value: seek_docker
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-seek-secret
                key: MYSQL_USER
                optional: false
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-seek-secret
                key: MYSQL_PASSWORD
                optional: false
        ports:
          - containerPort: 3306
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: {{ .Release.Name }}-seek-mysql-data-container
        args: [ "--character-set-server=utf8mb4","--collation-server=utf8mb4_unicode_ci","--ignore-db-dir=lost+found" ]
      volumes:
        - name: {{ .Release.Name }}-seek-mysql-data-container
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-seek-mysql-data-container
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-seek-mysql
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    name: {{ .Release.Name }}-seek-mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-seek-mysql-data-container
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
