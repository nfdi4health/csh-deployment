apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-seek-backend
spec:
  serviceName: {{ .Release.Name }}-seek-backend
  selector:
    matchLabels:
      name: {{ .Release.Name }}-seek-backend
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-seek-backend
    spec:
      containers:
      - image:  {{ .Values.images.seek }}
        name: backend
        env:
          - name: RAILS_ENV
            value: "production"
          - name: RAILS_RELATIVE_URL_ROOT
            value: "/mdr"
          - name: SOLR_PORT
            value: "8983"
          - name: SOLR_HOST
            value: "{{ .Release.Name}}-seek-solr"
          - name: NO_ENTRYPOINT_WORKERS
            value: "1"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-seek-secret
                key: MYSQL_USER
                optional: false
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-seek-secret
                key: MYSQL_PASSWORD
                optional: false
          - name: MYSQL_HOST
            value: "{{ .Release.Name}}-seek-mysql"
          - name: MYSQL_DATABASE
            value: "seek_docker"
        ports:
          - containerPort: 3000
        volumeMounts:
          - mountPath: /seek/filestore
            name: "data-container"
            subPath: "prod"
          - mountPath: /seek/backup
            name: "data-container"
            subPath: "backup"
          - mountPath: /seek/tmp/cache
            name: "cache-data-container"
      - image:  {{ .Values.images.seek }}
        name: worker
        env:
          - name: RAILS_ENV
            value: "production"
          - name: RAILS_RELATIVE_URL_ROOT
            value: "/mdr"
          - name: SOLR_PORT
            value: "8983"
          - name: SOLR_HOST
            value: "{{ .Release.Name}}-seek-solr"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-seek-secret
                key: MYSQL_USER
                optional: false
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-seek-secret
                key: MYSQL_PASSWORD
                optional: false
          - name: MYSQL_HOST
            value: "{{ .Release.Name}}-seek-mysql"
          - name: MYSQL_DATABASE
            value: "seek_docker"
        command: ["/bin/sh"]
        args: ["-c","docker/start_workers.sh"]
        ports:
          - containerPort: 3000
        volumeMounts:
          - mountPath: /seek/filestore
            name: "data-container"
            subPath: "prod"
          - mountPath: /seek/backup
            name: "data-container"
            subPath: "backup"
          - mountPath: /seek/tmp/cache
            name: "cache-data-container"
      securityContext:
        fsGroup: 33
      volumes:
        - name: "data-container"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-seek-backend-file-data-container"
        - name: "cache-data-container"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-seek-backend-cache-data-container"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-seek-backend
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    name: {{ .Release.Name }}-seek-backend
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-seek-backend-file-data-container
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-seek-backend-cache-data-container
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi